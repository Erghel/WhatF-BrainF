#include <iostream> //Стандартный ввод-вывод.
#include <fstream> //Ввод-вывод в файлы.
#include <vector> //Стандартный STL контейнер, динамический массив.

using namespace std; //Объявление пространства имен стандартной библиотеки.

static char cpu[30000]; //Статическая аллокация памяти для интерпретатора ~30кБайт(она статическая не из-за слова static).

int main(int argc, char **argv)  //Определение точки входа - функции main.
{

vector<char> acc;  //Accumulator - буфер для входного файла с кодом.
char ch; //Character буфер для символа из входного файла.
ifstream infile(argv[1]); //Первый параметр коммандной строки: имя файла с кодом. Открываем его.
while(infile) //Цикл перекачки из файла в буфер.
{
    infile.get(ch); //Забираем символ из файла в буфер ch.
    acc.push_back(ch); //Вставляем символ из буфера ch в буфер acc.
}
infile.close(); //Закрываем файл с кодом.
unsigned int j = 0; //Регистр текущего адреса памяти интерпретатора.
int brc = 0; //Bracket - счетчик незакрытых скобок.
for(int i = 0; i < acc.size(); ++i) //Основной цикл для каждого символа исходного кода. i счетчик текущего символа в буфере полученном из входного файла с кодом.
{
    //Лексический анализатор, если символ
    if(acc[i] == '>') j++; // > то инкрементируем адрес.
    if(acc[i] == '<') j--; //< то декрементируем адрес.
    if(acc[i] == '+') cpu[j]++; // + то инкрементируем значение по адресу.
    if(acc[i] == '-') cpu[j]--; //- то декремнтируем значение по адресу.
    if(acc[i] == '.') cout << cpu[j]; //. то выводим значение по адресу.
    if(acc[i] == ',') cin >> cpu[j]; //, то запрашиваем значение по адресу.
    if(acc[i] == '[') //Если символ открывающаяся скобка реализуем цикл/условный переход.
    {
        if(!cpu[j]) //Если значение по текущему адресу ноль.
        {
            ++brc; //Инкрементируем счетчик скобок.
            while(brc) // Пока есть не закрытые скобки.
            {
                ++i; //К следующему символу.
                if (acc[i] == '[') ++brc; //Открываем скобку.
                if (acc[i] == ']') --brc; //Закрываем скобку.
            }
        }else continue; //Если не ноль берем следующий символ.
    }
    else if(acc[i] == ']') //Если скобка заркывающаяся.
    {
        if(!cpu[j]) //Если значение по адресу ноль.
        {
            continue; //Переходим к следующему символу.
        }
        else //Если не ноль.
        {
            if(acc[i] == ']') brc++; //Если скобка закрывающаяся  инкрементируем счетчик скобок.
            while(brc) //Пока есть незакрытые скобки.
            {
                --i; // Смотрим предыдущий символ.
                if(acc[i] == '[') brc--; //Если скобка открытая декрементируем счетчик.
                if(acc[i] == ']') brc++; //Если закрытая инкрементируем счетчик.
            }
            --i; //Смотрим предыдущий символ.
        }
    }
 }
}
